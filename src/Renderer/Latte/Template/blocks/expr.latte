{define expr, ApiGenX\Info\ExprInfo $expr, ?ApiGenX\Info\ClassLikeInfo $scope, string $indent = ''}{*
	*}{if $expr instanceof ApiGenX\Info\Expr\BooleanExprInfo || $expr instanceof ApiGenX\Info\Expr\NullExprInfo}{*
		*}<span class="php-kw">{$expr->toString()}</span>{*
	*}{elseif $expr instanceof ApiGenX\Info\Expr\IntegerExprInfo || $expr instanceof ApiGenX\Info\Expr\FloatExprInfo}{*
		*}<span class="php-num">{$expr->toString()}</span>{*
	*}{elseif $expr instanceof ApiGenX\Info\Expr\StringExprInfo}{*
		*}<span class="php-str">{$expr->toString()}</span>{*
	*}{elseif $expr instanceof ApiGenX\Info\Expr\ArrayExprInfo}{*
		*}[{*
			*}{try}{*
				*}{foreach $expr->items as $item}{*
					*}{if $item->key}{rollback}{/if}{*
					*}{include this, expr: $item->value, scope: $scope}{sep}, {/sep}{*
				*}{/foreach}{*
			*}{else}{*
				*}{="\n\t$indent"}{*
				*}{foreach $expr->items as $item}{*
					*}{if $item->key}{include this, expr: $item->key} =&gt; {/if}{*
					*}{include this, expr: $item->value, scope: $scope, indent: "\t$indent"}{sep}{=",\n\t$indent"}{/sep}{*
				*}{/foreach}{*
				*}{=",\n$indent"}{*
			*}{/try}{*
		*}]{*
	*}{elseif $expr instanceof ApiGenX\Info\Expr\ClassConstantFetchExprInfo}{*
		*}{include exprName, name: $expr->classLike, scope: $scope}::{$expr->name}{*
	*}{elseif $expr instanceof ApiGenX\Info\Expr\ConstantFetchExprInfo}{*
		*}{$expr->name}{*
	*}{elseif $expr instanceof ApiGenX\Info\Expr\BinaryOpExprInfo}{*
		*}{include this, expr: $expr->left, scope: $scope}{*
		*}{$expr->op}{*
		*}{include this, expr: $expr->right, scope: $scope}{*
	*}{elseif $expr instanceof ApiGenX\Info\Expr\UnaryOpExprInfo}{*
		*}{$expr->op}{*
		*}{include this, expr: $expr->expr, scope: $scope}{*
	*}{else}{*
		*}{$error()}{*
	*}{/if}{*
*}{/define}
