{varType ApiGenX\Renderer\Latte\Template\GlobalParameters $global}

{define expr, ApiGenX\Info\ExprInfo $expr, ?ApiGenX\Info\ClassLikeInfo $scope, string $indent = ''}{*
	*}{if $expr instanceof ApiGenX\Info\Expr\BooleanExprInfo || $expr instanceof ApiGenX\Info\Expr\NullExprInfo}{*
		*}<span class="php-kw">{$expr->toString()}</span>{*
	*}{elseif $expr instanceof ApiGenX\Info\Expr\IntegerExprInfo || $expr instanceof ApiGenX\Info\Expr\FloatExprInfo}{*
		*}<span class="php-num">{$expr->raw}</span>{*
	*}{elseif $expr instanceof ApiGenX\Info\Expr\StringExprInfo}{*
		*}<span class="php-str">{$expr->raw ?? $expr->toString()}</span>{*
	*}{elseif $expr instanceof ApiGenX\Info\Expr\ArrayExprInfo}{*
		*}{embed autoBreakingLine, items: $expr->items, maxWidth: 100, indent: $indent}{*
			*}{block before}{="["}{/block}{*
			*}{block after}{="]"}{/block}{*
			*}{block item}{*
				*}{if $item->key}{include expr, expr: $item->key, scope: $scope} =&gt; {/if}{*
				*}{include expr, expr: $item->value, scope: $scope, indent: "\t$indent"}{*
			*}{/block}{*
			*}{block sep},{/block}{*
		*}{/embed}{*
	*}{elseif $expr instanceof ApiGenX\Info\Expr\ClassConstantFetchExprInfo}{*
		*}{if $expr->classLike->fullLower === 'self' && $scope}{*
			*}{var $memberClassLike = $scope}{*
			*}{include classLikeLink, classLike: $memberClassLike, text: $expr->classLike->fullLower}{*
		*}{elseif $expr->classLike->fullLower === 'parent' && $scope && isClass($scope) && $scope->extends}{*
			*}{var $memberClassLike = $global->index->classLike[$scope->extends->fullLower]}{*
			*}{include classLikeLink, classLike: $memberClassLike, text: $expr->classLike->fullLower}{*
		*}{elseif isset($global->index->classLike[$expr->classLike->fullLower])}{*
			*}{var $memberClassLike = $global->index->classLike[$expr->classLike->fullLower]}{*
			*}{include classLikeLink, classLike: $memberClassLike, short: true}{*
		*}{else}{*
			*}{var $memberClassLike = null}{*
			*}{$expr->classLike->full}{*
		*}{/if}{*
		*}::{*
		*}{if $memberClassLike !== null && isset($memberClassLike->constants[$expr->name])}{*
			*}{var $member = $memberClassLike->constants[$expr->name]}{*
			*}{embed memberLink, $memberClassLike, $member}{block content}{$member->name}{/block}{/embed}{*
		*}{elseif $memberClassLike !== null && isEnum($memberClassLike) && isset($memberClassLike->cases[$expr->name])}{*
			*}{var $member = $memberClassLike->cases[$expr->name]}{*
			*}{embed memberLink, $memberClassLike, $member}{block content}{$member->name}{/block}{/embed}{*
		*}{else}{*
			*}{$expr->name}{*
		*}{/if}{*
	*}{elseif $expr instanceof ApiGenX\Info\Expr\ConstantFetchExprInfo}{*
		*}{$expr->name}{*
	*}{elseif $expr instanceof ApiGenX\Info\Expr\UnaryOpExprInfo}{*
		*}{$expr->op}{*
		*}{include this, expr: $expr->expr, scope: $scope}{*
	*}{elseif $expr instanceof ApiGenX\Info\Expr\BinaryOpExprInfo}{*
		*}{include this, expr: $expr->left, scope: $scope}{*
		*} {$expr->op} {*
		*}{include this, expr: $expr->right, scope: $scope}{*
	*}{elseif $expr instanceof ApiGenX\Info\Expr\TernaryExprInfo}{*
		*}{include this, expr: $expr->condition, scope: $scope}{*
		*}{if $expr->if} ? {include this, expr: $expr->if, scope: $scope} : {else} ?: {/if}{*
		*}{include this, expr: $expr->else, scope: $scope}{*
	*}{elseif $expr instanceof ApiGenX\Info\Expr\ArrayKeyFetchExprInfo}{*
		*}{include this, expr: $expr->var, scope: $scope}{*
		*}[{include this, expr: $expr->key, scope: $scope}]{*
	*}{elseif $expr instanceof ApiGenX\Info\Expr\NewExprInfo}{*
		*}{var $classLike = $global->index->classLike[$expr->classLike->fullLower]}{*
		*}<span class="php-kw">new</span> {include classLikeLink, classLike: $classLike, short: true}{*
		*}({*
		*}{foreach $expr->args as $arg}{*
			*}{if $arg->name}{$arg->name}: {/if}{*
			*}{include this, expr: $arg->value, scope: $scope}{*
			*}{sep}, {/sep}{*
		*}{/foreach}{*
		*}){*
	*}{else}{*
		*}ERROR{*
	*}{/if}{*
*}{/define}
